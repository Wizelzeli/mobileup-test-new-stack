pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }
}

rootProject.name = "MobileUp Android Template"

include ':app'
include ':core'
include ':features'

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }

    versionCatalogs {
        libs {
            // Kotlin
            library('kotlin-datetime', 'org.jetbrains.kotlinx', 'kotlinx-datetime').version('0.4.0')

            version('coroutines', '1.6.4')
            library('coroutines-core', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-core').versionRef('coroutines')
            library('coroutines-android', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-android').versionRef('coroutines')

            // Android
            library('android-desugar', 'com.android.tools', 'desugar_jdk_libs').version('1.1.5')
            library('androidx-lifecycle-process', 'androidx.lifecycle', 'lifecycle-process').version('2.4.0')

            // UI
            version('compose', '1.2.0-rc03')
            version('composeCompiler', '1.3.0-beta01')
            library('compose-ui', 'androidx.compose.ui', 'ui').versionRef('compose')
            library('compose-material', 'androidx.compose.material', 'material').versionRef('compose')
            library('compose-tooling', 'androidx.compose.ui', 'ui-tooling').versionRef('compose')
            library('activity-compose', 'androidx.activity', 'activity-compose').version('1.5.0')
            library('appcompat', 'androidx.appcompat', 'appcompat').version('1.5.0')
            library('coil', 'io.coil-kt', 'coil-compose').version('2.1.0')
            library('splashscreen', 'androidx.core', 'core-splashscreen').version('1.0.0')
            version('accompanist', '0.24.13-rc')
            library('accompanist-systemuicontroller', 'com.google.accompanist', 'accompanist-systemuicontroller').versionRef('accompanist')
            library('accompanist-swiperefresh', 'com.google.accompanist', 'accompanist-swiperefresh').versionRef('accompanist')
            bundle('accompanist', ['accompanist-systemuicontroller', 'accompanist-swiperefresh'])

            // Architecture
            version('sesame', '1.5.0')
            library('sesame-localizedString', 'com.github.aartikov', 'sesame-localized-string').versionRef('sesame')
            library('sesame-dialog', 'com.github.aartikov', 'sesame-dialog').versionRef('sesame')
            library('sesame-composeForm', 'com.github.aartikov', 'sesame-compose-form').versionRef('sesame')
            bundle('sesame', ['sesame-localizedString', 'sesame-dialog', 'sesame-composeForm'])

            version('decompose', '0.8.0')
            library('decompose-core', 'com.arkivanov.decompose', 'decompose').versionRef('decompose')
            library('decompose-compose', 'com.arkivanov.decompose', 'extensions-compose-jetpack').versionRef('decompose')
            bundle('decompose', ['decompose-core', 'decompose-compose'])

            version('replica', '1.0.0-alpha6')
            library('replica-core', 'com.github.aartikov', 'replica-core').versionRef('replica')
            library('replica-algebra', 'com.github.aartikov', 'replica-algebra').versionRef('replica')
            library('replica-android-network', 'com.github.aartikov', 'replica-android-network').versionRef('replica')
            library('replica-decompose', 'com.github.aartikov', 'replica-decompose').versionRef('replica')
            library('replica-devtools', 'com.github.aartikov', 'replica-devtools').versionRef('replica')
            bundle('replica', ['replica-core', 'replica-algebra', 'replica-android-network', 'replica-decompose'])

            // Serialization
            version('serialization', '1.3.3')
            library('serialization-core', 'org.jetbrains.kotlinx', 'kotlinx-serialization-core').versionRef('serialization')
            library('serialization-json', 'org.jetbrains.kotlinx', 'kotlinx-serialization-json').versionRef('serialization')

            // Network
            library('retrofit-core', 'com.squareup.retrofit2', 'retrofit').version('2.9.0')
            library('retrofit-converter-serialization', 'com.jakewharton.retrofit', 'retrofit2-kotlinx-serialization-converter').version('0.8.0')
            library('okhttp-logging', 'com.squareup.okhttp3', 'logging-interceptor').version('4.9.2')

            // DI
            library('koin', 'io.insert-koin', 'koin-core').version('3.2.0')

            // Code quality
            library('detekt-formatting', 'io.gitlab.arturbosch.detekt', 'detekt-formatting').version('1.21.0')

            // Debugging
            library('timber', 'com.jakewharton.timber', 'timber').version('5.0.1')

            version('hyperion', '0.9.34')
            version('hyperionAddons', '0.3.3')
            library('hyperion-core', 'com.willowtreeapps.hyperion', 'hyperion-core').versionRef('hyperion')
            library('hyperion-recorder', 'com.willowtreeapps.hyperion', 'hyperion-recorder').versionRef('hyperion')
            library('hyperion-crash', 'com.willowtreeapps.hyperion', 'hyperion-crash').versionRef('hyperion')
            library('hyperion-disk', 'com.willowtreeapps.hyperion', 'hyperion-disk').versionRef('hyperion')
            library('hyperion-addons-logs', 'me.nemiron.hyperion', 'logs').versionRef('hyperionAddons')
            library('hyperion-addons-networkEmulation', 'me.nemiron.hyperion', 'network-emulation').versionRef('hyperionAddons')
            library('hyperion-addons-chucker', 'me.nemiron.hyperion', 'chucker').versionRef('hyperionAddons')
            bundle('hyperion',
                    ['hyperion-core', 'hyperion-recorder', 'hyperion-crash', 'hyperion-disk',
                     'hyperion-addons-logs', 'hyperion-addons-networkEmulation', 'hyperion-addons-chucker']
            )
            library('chucker', 'com.github.chuckerteam.chucker', 'library').version('3.5.2')

            // Testing
            library('junit', 'junit', 'junit').version('4.13.2')
            library('extJunit', 'androidx.test.ext', 'junit-ktx').version('1.1.3')
            library('kotlinTest', 'org.jetbrains.kotlin', 'kotlin-test').version('1.7.10')
            library('mockWebServer', 'com.squareup.okhttp3', 'mockwebserver').version('4.3.1')
            library('awaitility', 'org.awaitility', 'awaitility-kotlin').version('4.2.0')
            library('robolectric', 'org.robolectric', 'robolectric').version('4.8')
        }
    }
}